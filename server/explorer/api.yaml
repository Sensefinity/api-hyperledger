openapi: 3.0.1
info:
  title: Sensefinity
  version: 1.0.0
servers:
  - url: http://localhost:8091/
    description: Sensefinity API Explorer
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    MessageRes:
      type: object
      properties:
        message:
          type: string
    User:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
    Device:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Product:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Tracking:
      type: object
      properties:
        id:
          type: string
        device_id:
          type: string
        product_id:
          type: string
        picked_timestamp:
          type: string
          format: date-time
        delivered_timestamp:
          type: string
          format: date-time
    Sensor:
      type: object
      properties:
        id:
          type: string
        device_id:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        value:
          type: number
        type:
          type: string
        origin_timestamp:
          type: string
          format: date-time
        timestamp:
          type: string
          format: date-time
    TrackingWithSensors:
      type: object
      properties:
        id:
          type: string
        device_id:
          type: string
        product_id:
          type: string
        picked_timestamp:
          type: string
          format: date-time
        delivered_timestamp:
          type: string
          format: date-time
        sensors:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              device_id:
                type: string
              latitude:
                type: number
              longitude:
                type: number
              value:
                type: number
              type:
                type: string
              origin_timestamp:
                type: string
                format: date-time
              timestamp:
                type: string
                format: date-time
    UserLoginRes:
      type: object
      properties:
        token_type:
          type: string
        access_token:
          type: string
paths:
  /user/login:
    post:
      tags:
        - User
      summary: User login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: User login response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserLoginRes"
  /device:
    get:
      tags:
        - Device
      summary: Get All Devices
      security:
        - bearerAuth: []
      responses:
        200:
          description: An array of objects of type Device
          content:
            application/json:
              schema:
                type: object
                properties:
                  devices:
                    type: array
                    items:
                      $ref: "#/components/schemas/Device"
    post:
      tags:
        - Device
      summary: Add Device
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
      responses:
        200:
          description: Add device success response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageRes"
  /device/{id}:
    get:
      tags:
        - Device
      summary: Get Device
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: Device id
          required: true
          schema:
            type: string
      responses:
        200:
          description: An object of type Device
          content:
            application/json:
              schema:
                type: object
                properties:
                  device:
                    $ref: '#/components/schemas/Device'
    put:
      tags:
        - Device
      summary: Update Device
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: Device id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        200:
          description: Update device success response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageRes"
    delete:
      tags:
        - Device
      summary: Delete Device
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: Device id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Delete device success response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageRes"
  /product:
    get:
      tags:
        - Product
      summary: Get All Products
      security:
        - bearerAuth: []
      responses:
        200:
          description: An array of objects of type Product
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
    post:
      tags:
        - Product
      summary: Add Product
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
      responses:
        200:
          description: Add product response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageRes"
  /product/{id}:
    get:
      tags:
        - Product
      summary: Get Product
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: Product id
          required: true
          schema:
            type: string
      responses:
        200:
          description: An object of type Product
          content:
            application/json:
              schema:
                type: object
                properties:
                  product:
                    $ref: '#/components/schemas/Product'
    put:
      tags:
        - Product
      summary: Update Product
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: Product id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        200:
          description: Update product success response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageRes"
    delete:
      tags:
        - Product
      summary: Delete Product
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: Product id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Delete product success response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageRes"
  /tracking:
    post:
      tags:
        - Tracking
      summary: Add Tracking
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tracking"
      responses:
        200:
          description: Add tracking success response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageRes"
  /tracking/{deviceId}:
    get:
      tags:
        - Tracking
      summary: Get All Tracking
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: deviceId
          description: Device id
          required: true
          schema:
            type: string
      responses:
        200:
          description: An array of objects of type Tracking
          content:
            application/json:
              schema:
                type: object
                properties:
                  trackings:
                    type: array
                    items:
                      $ref: "#/components/schemas/TrackingWithSensors"
  /tracking/{id}:
    put:
      tags:
        - Tracking
      summary: Update Tracking
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: Tracking id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tracking"
      responses:
        200:
          description: Update tracking success response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageRes"
    delete:
      tags:
        - Tracking
      summary: Delete Tracking
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: Tracking id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Delete tracking success response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageRes"
  /tracking/{id}/deliver:
    put:
      tags:
        - Tracking
      summary: Tracking Mark as Deliver
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: Tracking id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Mark as deliver tracking success response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageRes"
  /sensor:
    post:
      tags:
        - Sensor
      summary: Add Sensor
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Sensor"
      responses:
        200:
          description: Add sensor success response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageRes"
